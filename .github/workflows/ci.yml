name: CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Testes e Análise de Código
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sistema_academico
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout do código
      uses: actions/checkout@v3

    - name: Configurar JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Configurar Maven Cache
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
        restore-keys: maven-${{ runner.os }}-

    - name: Configurar autenticação no GitHub Packages
      run: |
        mkdir -p ~/.m2
        echo "<settings>
        <servers>
          <server>
            <id>github</id>
            <username>${{ secrets.GH_USERNAME }}</username>
            <password>${{ secrets.GH_PACKAGES_TOKEN }}</password>
          </server>
        </servers>
        </settings>" > ~/.m2/settings.xml

    - name: Configurar variáveis de ambiente do banco de dados
      run: |
        echo "SPRING_DATASOURCE_URL=jdbc:postgresql://localhost:5432/sistema_academico" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_USERNAME=postgres" >> $GITHUB_ENV
        echo "SPRING_DATASOURCE_PASSWORD=postgres" >> $GITHUB_ENV

    - name: Limpar Cache do Maven
      run: mvn clean

    - name: Rodar os Testes com Cobertura
      run: mvn verify

    # - name: Rodar Análise do SonarCloud
#   env:
#     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
#   run: mvn sonar:sonar -Dsonar.login=$SONAR_TOKEN

